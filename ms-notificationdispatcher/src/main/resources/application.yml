spring:
  application:
    name: SERVICIO-NOTIFICACIONES
  datasource:
#    url: jdbc:postgresql://localhost:5433/ms_notificaciones
#    username: postgres
#    password: postgres
    url: jdbc:postgresql://localhost:26257/notificationDispatcher?user=root&password=
    username: root
    password:
  jpa:
    hibernate:
      ddl-auto: create  # Cambia a create para forzar la creación de la tabla
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        use_sql_comments: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
  rabbitmq:
    host: localhost
    port: 5672
    username: postgres
    password: postgres
    virtual-host: /
    connection-timeout: 60000
    # Configuración para durabilidad de RabbitMQ
    template:
      mandatory: true
      retry:
        enabled: true
        initial-interval: 2000
        max-attempts: 5
        multiplier: 2.0
    listener:
      simple:
        acknowledge-mode: manual
        prefetch: 1
server:
  port: 0
#  port: 8082

logging:
  level:
    root: INFO
    org.hibernate: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.orm.jdbc.bind: TRACE
    org.springframework.amqp: DEBUG
    com.rabbitmq.client: DEBUG
    org.springframework.boot: DEBUG

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
    fetch-registry: true
    register-with-eureka: true
  instance:
    prefer-ip-addres: true
    instance-id: ${spring.application.name}:${random.value}

management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always